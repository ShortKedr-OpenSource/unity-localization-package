. {
    --list-element-active-background: rgba(72, 130, 255, 0.25);
    --list-element-hover-background: rgba(72, 130, 255, 0.4);
    --list-element-selected-background: rgba(112, 255, 72, 0.25);
}

/* Elements [Start] */
.TittledContentBox {
    border-radius: 0;
    border-width: 1px;
    border-color: var(--unity-colors-toolbar-border);/*rgba(0, 0, 0, 0.1);*/
    overflow: hidden;
    margin: 0;
}

ElementToolbar{
    overflow: visible;
    min-height: 24px;
    max-height: 24px;
    flex-grow: 1;
}

.ElementToolbar_LeftAnchor {
    position: absolute;
    background-color: rgba(0, 0, 0, 0.0);
    width: 100%;
    height: 100%;
    flex-direction: row;
    justify-content: flex-start;
}

.ElementToolbar_RightAnchor {
    position: absolute;
    background-color: rgba(0, 0, 0, 0.0);
    width: 100%;
    height: 100%;
    flex-direction: row-reverse;
    justify-content: flex-start;
}

.ElementToolbar_CenterAnchor {
    position: absolute;
    background-color: rgba(0, 0, 0, 0.0);
    width: 100%;
    height: 100%;
    flex-direction: row;
    justify-content: center;
}

ToggleButton {
    width: 20px;
    height: 20px;
    border-color: var(--unity-colors-app_toolbar_button-border);
    background-color: var(--unity-colors-app_toolbar_button-background);
    -unity-font-style: normal;
}

ToggleButton.Checked {
    background-color: var(--unity-colors-app_toolbar_button-background-checked);
}

ToggleButton.Checked:hover{
    background-color: var(--unity-colors-button-background-focus);
}

ToggleButton:hover {
    background-color: var(--unity-colors-app_toolbar_button-background-hover);
}

ToggleButton:active {
    background-color: var(--unity-colors-app_toolbar_button-background-pressed);
}

ToggleButton.LeftPanel.Checked {
    -unity-font-style: bold;
}

ToggleButton.RightPanel.Checked {
    -unity-font-style: bold;
}

EnumButton {
    flex-direction: row;
    background-color: rgba(0, 0, 0, 0.0);
}

PagerTooltipToolbar {
    height: 24px;
    min-height: 24px;
    max-height: 24px;
    border-bottom-width: 0;
    border-top-width: 1px;
    justify-content: flex-end;
    align-items: stretch;
}

.PagerTooltipToolbar_Previous {
    width: 24px;
    background-image: var(--unity-icons-arrow_left);
}

.PagerTooltipToolbar_Next {
    width: 24px;
    background-image: var(--unity-icons-arrow_right);
}

.PagerTooltipToolbar_CurrentField {
    background-color: rgba(0, 0, 0, 0.0);
    border-width: 0;
    min-width: 24px;
    -unity-text-align: middle-right;
}

.PagerTooltipToolbar_PageInfoLabel {
    -unity-text-align: middle-center;
}

.PagerTooltipToolbar_InfoLabel {
    -unity-text-align: middle-center;
}

.PagerTooltipToolbar_TooltipLabel {
    flex-grow: 1;
    -unity-text-align: middle-left;
    margin-left: 4px;
}
/* Elements [End] */

/* Left Panel [Start] */
LocaleParamEditor.TittledContentBox {
    min-height: 100;
    max-height: 150;
    border-left-width: 0;
    border-right-width: 0;
    border-top-width: 0;
    border-bottom-width: 0;
}

LocaleList.TittledContentBox {
    flex-grow: 1;
    border-right-width: 0;
    border-left-width: 0;
    border-bottom-width: 0;
}

LocaleListElement {
    flex-direction: row;
    flex-grow: 1;
    overflow: hidden;
    border-width: 0;
    height: 25px;
    min-height: 25px;
    max-height: 25px;
    -unity-text-align: middle-left;
    align-items: stretch;
}

.LocaleListElement_LocaleLabel {
    flex-grow: 0.0;
    padding-top: 3px;
    padding-bottom: 3px;
    padding-left: 5px;
    overflow: hidden;
    width:30%;
    border-right-color: rgba(0, 0, 0, 0.3);
    border-right-width: 1px;
}

.LocaleListElement_LangLabel {
    flex-grow: 1.0;
    flex-shrink: 1.0;
    padding-top: 3px;
    padding-bottom: 3px;
    padding-left: 5px;
    overflow: hidden;
    flex-direction: row-reverse;
    justify-content: flex-end;
}

.LocaleListElement_PropsButton {
    flex-grow: 0;
    flex-shrink: 0;
    width: 18px;
    border-width: 0;
    background-color: rgba(0,0,0,0);
    background-image: var(--unity-icons-pane_options);
    -unity-background-scale-mode: scale-to-fit;
}

.LocaleListElement_PropsButton:hover {
    background-color: var(--unity-colors-button-background-hover);
}

.LocaleListElement_PropsButton:active {
    background-color: var(--unity-colors-button-background-pressed);
}

LocaleListElement.Even {
    background-color: rgba(1, 1, 1, 0.05);
}

LocaleListElement.Odd {
    background-color: rgba(1, 1, 1, 0.1);
}

LocaleListElement:hover, LocaleListElement.Odd:hover, LocaleListElement.Even:hover {
    background-color: var(--list-element-hover-background);
}

LocaleListElement:active, LocaleListElement.Odd:active, LocaleListElement.Even:active {
    background-color: var(--list-element-active-background);
}

LocaleListElement.Selected, LocaleListElement.Odd.Selected, LocaleListElement.Even.Selected {
    background-color: var(--list-element-selected-background);
}

.LeftPanel_AddLocaleButton {
    min-height: 26px;
    min-width: 225px;
    max-width: 225px;
    align-self: center;
    margin-top: 10px;
    margin-bottom: 10px;
}

/* Left Panel [End] */

/* Plain View [Start] */

PlainLocaleEditor {
    flex-grow: 1;
    border: 0;
}

TittleSearchToolbar {
    flex-grow: 0;
    justify-content: center;
    min-height: 24px;
    max-height: 24px;
    -unity-font-style: bold;
}

.TittleSearchToolbar_Tittle {
    flex-grow: 1.0;
    flex-direction: row;
    justify-content: flex-end;
    -unity-text-align: middle-center;
}

.TittleSearchToolbar_Search {
    width: 20%;
    max-width: 150px;
    min-width: 50px;
}

PlainTermElementTableHeader {
    -unity-text-align: middle-center;
    -unity-font-style: bold;
}

.PlainTermElementTableHeader_HeaderContainer {
    flex-direction: row;
    flex-grow: 1;
    overflow: hidden;
    border-width: 0;
    background-color: rgba(0, 0, 0, 0.0);
}

.PlainTermElementTableHeader_TermLabel {
    flex-grow: 0.3;
    flex-shrink: 1.0;
    flex-basis: 30%;
    width: auto;
    overflow: hidden;
    border-right-width: 1px;
    border-right-color: var(--unity-colors-toolbar-border);
}

.PlainTermElementTableHeader_ValueLabel {
    flex-grow: 0.35;
    flex-shrink: 1.0;
    flex-basis: 35%;
    width: auto;
    overflow: hidden;
}

.PlainTermElementTableHeader_NoteLabel {
    flex-grow: 0.35;
    flex-shrink: 1.0;
    flex-basis: 35%;
    width: auto;
    overflow: hidden;
    border-left-width: 1px;
    border-left-color: var(--unity-colors-toolbar-border);
}

.PlainTermElementTableHeader_PropsPlaceholder {
    opacity: 0;
    flex-grow: 0;
    width: 18px;
    border-width: 0;
    background-color: rgba(0,0,0,0);
    background-image: var(--unity-icons-pane_options);
    -unity-background-scale-mode: scale-to-fit;
}

.PlainTermElementTableHeader_ScrollerPlaceholder {
    opacity: 0;
}

PlainTermElement {
    flex-direction: column;
    flex-grow: 1;
    width: auto;
    height: auto;
    border-width: 0;
}

.PlainTermElement_MainRoot {
    flex-direction: row;
    flex-grow: 0;
    overflow: hidden;
    border-width: 0;
    height: 25px;
    min-height: 25px;
    max-height: 25px;
    -unity-text-align: middle-left;
    align-items: stretch;
}

.PlainTermElement_EditorRoot {
    height: auto;
    padding: 10px;
    border-bottom-width: 1px;
    border-bottom-color: rgba(0, 0, 0, 0.3);
}

.PlainTermElement_TermLabel {
    flex-grow: 0.3;
    flex-shrink: 1.0;
    flex-basis: 30%;
    width: auto;
    padding-top: 3px;
    padding-bottom: 3px;
    padding-left: 5px;
    overflow: hidden;
    border-right-color: rgba(0, 0, 0, 0.3);
    border-right-width: 1px;
}

.PlainTermElement_ValueLabel {
    flex-grow: 0.35;
    flex-shrink: 1.0;
    flex-basis: 35%;
    padding-top: 3px;
    padding-bottom: 3px;
    padding-left: 5px;
    overflow: hidden;
    border-right-color: rgba(0, 0, 0, 0.3);
    border-right-width: 1px;
}

.PlainTermElement_NoteLabel {
    flex-grow: 0.35;
    flex-shrink: 1.0;
    flex-basis: 35%;
    padding-top: 3px;
    padding-bottom: 3px;
    padding-left: 5px;
    overflow: hidden;
}

.PlainTermElement_PropsButton {
    flex-grow: 0;
    width: 18px;
    border-width: 0;
    background-color: rgba(0,0,0,0);
    background-image: var(--unity-icons-pane_options);
    -unity-background-scale-mode: scale-to-fit;
}

.PlainTermElement_TermProperty {
}

.PlainTermElement_ValueProperty {
}

.PlainTermElement_NoteProperty {
}

.PlainTermElement_PropsButton:hover {
    background-color: var(--unity-colors-button-background-hover);
}

.PlainTermElement_PropsButton:active {
    background-color: var(--unity-colors-button-background-pressed);
}

.PlainTermElement_MainRoot:hover, .PlainTermElement_MainRoot.Odd:hover, .PlainTermElement_MainRoot.Even:hover {
    background-color: var(--list-element-hover-background);
}

.PlainTermElement_MainRoot:active, .PlainTermElement_MainRoot.Odd:active, .PlainTermElement_MainRoot.Even:active {
    background-color: var(--list-element-active-background);
}

.PlainTermElement_MainRoot.Active, .PlainTermElement_MainRoot.Odd.Active, .PlainTermElement_MainRoot.Even.Active {
    background-color: var(--list-element-selected-background);
}

PlainTermElement.Even {
    background-color: rgba(1, 1, 1, 0.05);
}

PlainTermElement.Odd {
    background-color: rgba(1, 1, 1, 0.1);
}

PlainTermElementList {
    margin: 0;
    padding: 0;
    flex-grow: 1;
}
/* Plain View [End] */